import { PrismaClient, Category } from '@prisma/client';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

// Helper function to create variants
function createVariants(colors: string[], sizes: string[], stockPerVariant: number = 10) {
  const variants: { color: string; size: string; stock: number }[] = [];
  for (const color of colors) {
    for (const size of sizes) {
      variants.push({
        color,
        size,
        stock: stockPerVariant,
      });
    }
  }
  return variants;
}

async function main() {
  console.log('üå± Seeding database...');

  // Create admin user
  const hashedPassword = await bcrypt.hash('admin123', 10);
  const admin = await prisma.user.upsert({
    where: { email: 'admin@fashionstore.com' },
    update: {},
    create: {
      email: 'admin@fashionstore.com',
      name: 'Admin User',
      password: hashedPassword,
      role: 'ADMIN',
    },
  });

  console.log('‚úÖ Created admin user:', admin.email);

  // Create categories
  const categories = [
    { name: '√Åo Nam', slug: 'ao-nam' },
    { name: '√Åo N·ªØ', slug: 'ao-nu' },
    { name: 'Qu·∫ßn Nam', slug: 'quan-nam' },
    { name: 'Qu·∫ßn N·ªØ', slug: 'quan-nu' },
    { name: 'Gi√†y D√©p', slug: 'giay-dep' },
    { name: 'Ph·ª• Ki·ªán', slug: 'phu-kien' },
  ];

  const createdCategories: Category[] = [];
  for (const cat of categories) {
    const category = await prisma.category.upsert({
      where: { slug: cat.slug },
      update: {},
      create: cat,
    });
    createdCategories.push(category);
    console.log('‚úÖ Created category:', category.name);
  }

  // Get categories
  const aoNamCategory = createdCategories.find(c => c.slug === 'ao-nam');
  const aoNuCategory = createdCategories.find(c => c.slug === 'ao-nu');
  const quanNamCategory = createdCategories.find(c => c.slug === 'quan-nam');
  const quanNuCategory = createdCategories.find(c => c.slug === 'quan-nu');
  const giayDepCategory = createdCategories.find(c => c.slug === 'giay-dep');
  const phuKienCategory = createdCategories.find(c => c.slug === 'phu-kien');

  let totalProducts = 0;

  // ===== √ÅO NAM =====
  if (aoNamCategory) {
    const products = [
      {
        name: '√Åo Thun Basic Nam',
        slug: 'ao-thun-basic-nam',
        description: '√Åo thun nam form regular, ch·∫•t li·ªáu cotton 100% th·∫•m h√∫t m·ªì h√¥i t·ªët',
        price: 199000,
        originalPrice: 299000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.5,
        reviewCount: 25,
        variants: createVariants(['Tr·∫Øng', 'ƒêen', 'X√°m'], ['S', 'M', 'L', 'XL'], 10),
      },
      {
        name: '√Åo S∆° Mi Tr·∫Øng Nam',
        slug: 'ao-somi-trang-nam',
        description: '√Åo s∆° mi nam d√†i tay, ph√π h·ª£p ƒëi l√†m v√† d·ª± ti·ªác',
        price: 399000,
        originalPrice: 599000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.8,
        reviewCount: 45,
        variants: createVariants(['Tr·∫Øng', 'Xanh nh·∫°t', 'H·ªìng'], ['M', 'L', 'XL', 'XXL'], 8),
      },
      {
        name: '√Åo Polo Nam',
        slug: 'ao-polo-nam',
        description: '√Åo polo nam c√≥ c·ªï, phong c√°ch th·ªÉ thao l·ªãch s·ª±',
        price: 249000,
        originalPrice: 349000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.6,
        reviewCount: 30,
        variants: createVariants(['ƒêen', 'Navy', 'ƒê·ªè ƒë√¥'], ['S', 'M', 'L', 'XL'], 12),
      },
      {
        name: '√Åo Kho√°c Jean Nam',
        slug: 'ao-khoac-jean-nam',
        description: '√Åo kho√°c jean nam phong c√°ch streetwear',
        price: 549000,
        originalPrice: 799000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.7,
        reviewCount: 20,
        variants: createVariants(['Xanh ƒë·∫≠m', 'ƒêen'], ['M', 'L', 'XL'], 7),
      },
      {
        name: '√Åo Hoodie Nam',
        slug: 'ao-hoodie-nam',
        description: '√Åo hoodie nam c√≥ m≈©, ·∫•m √°p tho·∫£i m√°i',
        price: 459000,
        originalPrice: 649000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.4,
        reviewCount: 18,
        variants: createVariants(['ƒêen', 'X√°m', 'Navy'], ['M', 'L', 'XL', 'XXL'], 9),
      },
    ];

    for (const product of products) {
      await prisma.product.upsert({
        where: { slug: product.slug },
        update: {},
        create: {
          ...product,
          categoryId: aoNamCategory.id,
          variants: {
            create: product.variants,
          },
        },
      });
      totalProducts++;
    }
    console.log(`‚úÖ Created ${products.length} products for √Åo Nam`);
  }

  // ===== √ÅO N·ªÆ =====
  if (aoNuCategory) {
    const products = [
      {
        name: '√Åo Croptop N·ªØ',
        slug: 'ao-croptop-nu',
        description: '√Åo croptop n·ªØ phong c√°ch tr·∫ª trung, nƒÉng ƒë·ªông',
        price: 159000,
        originalPrice: 249000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.3,
        reviewCount: 32,
        variants: createVariants(['ƒêen', 'Tr·∫Øng', 'H·ªìng'], ['S', 'M', 'L'], 15),
      },
      {
        name: 'V√°y Maxi N·ªØ',
        slug: 'vay-maxi-nu',
        description: 'V√°y maxi d√†i thanh l·ªãch, th√≠ch h·ª£p d·ª± ti·ªác',
        price: 599000,
        originalPrice: 899000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.7,
        reviewCount: 18,
        variants: createVariants(['ƒê·ªè', 'ƒêen', 'Navy'], ['S', 'M', 'L'], 6),
      },
      {
        name: '√Åo Ki·ªÉu N·ªØ',
        slug: 'ao-kieu-nu',
        description: '√Åo ki·ªÉu n·ªØ c√¥ng s·ªü sang tr·ªçng',
        price: 349000,
        originalPrice: 499000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.5,
        reviewCount: 28,
        variants: createVariants(['Tr·∫Øng', 'H·ªìng pastel', 'Xanh mint'], ['S', 'M', 'L', 'XL'], 10),
      },
      {
        name: '√Åo S∆° Mi N·ªØ',
        slug: 'ao-somi-nu',
        description: '√Åo s∆° mi n·ªØ d√†i tay, form d√°ng thanh l·ªãch',
        price: 379000,
        originalPrice: 549000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.6,
        reviewCount: 24,
        variants: createVariants(['Tr·∫Øng', 'ƒêen', 'Xanh navy'], ['S', 'M', 'L'], 11),
      },
      {
        name: '√Åo Len N·ªØ',
        slug: 'ao-len-nu',
        description: '√Åo len n·ªØ ·∫•m √°p, ph√π h·ª£p m√πa ƒë√¥ng',
        price: 429000,
        originalPrice: 599000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.8,
        reviewCount: 15,
        variants: createVariants(['Be', 'N√¢u', 'ƒêen'], ['S', 'M', 'L'], 8),
      },
    ];

    for (const product of products) {
      await prisma.product.upsert({
        where: { slug: product.slug },
        update: {},
        create: {
          ...product,
          categoryId: aoNuCategory.id,
          variants: {
            create: product.variants,
          },
        },
      });
      totalProducts++;
    }
    console.log(`‚úÖ Created ${products.length} products for √Åo N·ªØ`);
  }

  // ===== QU·∫¶N NAM =====
  if (quanNamCategory) {
    const products = [
      {
        name: 'Qu·∫ßn Jean Nam Slimfit',
        slug: 'quan-jean-nam-slimfit',
        description: 'Qu·∫ßn jean nam form slimfit √¥m v·ª´a v·∫∑n',
        price: 449000,
        originalPrice: 649000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.6,
        reviewCount: 35,
        variants: createVariants(['Xanh ƒëen', 'Xanh nh·∫°t'], ['29', '30', '31', '32', '33'], 8),
      },
      {
        name: 'Qu·∫ßn Kaki Nam',
        slug: 'quan-kaki-nam',
        description: 'Qu·∫ßn kaki nam c√¥ng s·ªü l·ªãch s·ª±',
        price: 359000,
        originalPrice: 499000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.4,
        reviewCount: 22,
        variants: createVariants(['Be', 'X√°m', 'ƒêen'], ['29', '30', '31', '32'], 10),
      },
      {
        name: 'Qu·∫ßn Short Nam',
        slug: 'quan-short-nam',
        description: 'Qu·∫ßn short nam th·ªÉ thao tho·∫£i m√°i',
        price: 229000,
        originalPrice: 329000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.3,
        reviewCount: 18,
        variants: createVariants(['ƒêen', 'X√°m', 'Navy'], ['M', 'L', 'XL'], 15),
      },
      {
        name: 'Qu·∫ßn T√¢y Nam',
        slug: 'quan-tay-nam',
        description: 'Qu·∫ßn t√¢y nam c√¥ng s·ªü cao c·∫•p',
        price: 499000,
        originalPrice: 699000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.7,
        reviewCount: 28,
        variants: createVariants(['ƒêen', 'X√°m ƒë·∫≠m', 'Navy'], ['29', '30', '31', '32', '33'], 7),
      },
    ];

    for (const product of products) {
      await prisma.product.upsert({
        where: { slug: product.slug },
        update: {},
        create: {
          ...product,
          categoryId: quanNamCategory.id,
          variants: {
            create: product.variants,
          },
        },
      });
      totalProducts++;
    }
    console.log(`‚úÖ Created ${products.length} products for Qu·∫ßn Nam`);
  }

  // ===== QU·∫¶N N·ªÆ =====
  if (quanNuCategory) {
    const products = [
      {
        name: 'Qu·∫ßn Jean N·ªØ Skinny',
        slug: 'quan-jean-nu-skinny',
        description: 'Qu·∫ßn jean n·ªØ skinny √¥m d√°ng t√¥n ch√¢n',
        price: 429000,
        originalPrice: 599000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.5,
        reviewCount: 40,
        variants: createVariants(['Xanh ƒëen', 'ƒêen'], ['26', '27', '28', '29', '30'], 9),
      },
      {
        name: 'Qu·∫ßn Baggy N·ªØ',
        slug: 'quan-baggy-nu',
        description: 'Qu·∫ßn baggy n·ªØ phong c√°ch H√†n Qu·ªëc',
        price: 389000,
        originalPrice: 549000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.4,
        reviewCount: 25,
        variants: createVariants(['Be', 'X√°m', 'ƒêen'], ['S', 'M', 'L'], 10),
      },
      {
        name: 'Ch√¢n V√°y N·ªØ',
        slug: 'chan-vay-nu',
        description: 'Ch√¢n v√°y n·ªØ d√°ng A thanh l·ªãch',
        price: 299000,
        originalPrice: 449000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.6,
        reviewCount: 32,
        variants: createVariants(['ƒêen', 'Xanh navy', 'ƒê·ªè ƒë√¥'], ['S', 'M', 'L'], 11),
      },
      {
        name: 'Qu·∫ßn Short Jean N·ªØ',
        slug: 'quan-short-jean-nu',
        description: 'Qu·∫ßn short jean n·ªØ tr·∫ª trung nƒÉng ƒë·ªông',
        price: 259000,
        originalPrice: 369000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.3,
        reviewCount: 20,
        variants: createVariants(['Xanh nh·∫°t', 'Xanh ƒëen'], ['26', '27', '28', '29'], 13),
      },
    ];

    for (const product of products) {
      await prisma.product.upsert({
        where: { slug: product.slug },
        update: {},
        create: {
          ...product,
          categoryId: quanNuCategory.id,
          variants: {
            create: product.variants,
          },
        },
      });
      totalProducts++;
    }
    console.log(`‚úÖ Created ${products.length} products for Qu·∫ßn N·ªØ`);
  }

  // ===== GI√ÄY D√âP =====
  if (giayDepCategory) {
    const products = [
      {
        name: 'Gi√†y Sneaker Tr·∫Øng',
        slug: 'giay-sneaker-trang',
        description: 'Gi√†y sneaker tr·∫Øng unisex phong c√°ch t·ªëi gi·∫£n',
        price: 599000,
        originalPrice: 899000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.8,
        reviewCount: 55,
        variants: createVariants(['Tr·∫Øng', 'Tr·∫Øng ƒëen'], ['38', '39', '40', '41', '42', '43'], 7),
      },
      {
        name: 'D√©p Sandal Nam',
        slug: 'dep-sandal-nam',
        description: 'D√©p sandal nam quai ngang tho·∫£i m√°i',
        price: 199000,
        originalPrice: 299000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.2,
        reviewCount: 15,
        variants: createVariants(['ƒêen', 'N√¢u'], ['39', '40', '41', '42', '43'], 12),
      },
      {
        name: 'Gi√†y L∆∞·ªùi Nam',
        slug: 'giay-luoi-nam',
        description: 'Gi√†y l∆∞·ªùi nam da c√¥ng s·ªü l·ªãch s·ª±',
        price: 699000,
        originalPrice: 999000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.7,
        reviewCount: 38,
        variants: createVariants(['ƒêen', 'N√¢u'], ['39', '40', '41', '42', '43'], 6),
      },
      {
        name: 'Gi√†y Cao G√≥t N·ªØ',
        slug: 'giay-cao-got-nu',
        description: 'Gi√†y cao g√≥t n·ªØ 7cm thanh l·ªãch',
        price: 549000,
        originalPrice: 799000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.5,
        reviewCount: 30,
        variants: createVariants(['ƒêen', 'Nude', 'ƒê·ªè'], ['35', '36', '37', '38', '39'], 7),
      },
      {
        name: 'D√©p N·ªØ ƒê·∫ø B·ªát',
        slug: 'dep-nu-de-bet',
        description: 'D√©p n·ªØ ƒë·∫ø b·ªát √™m √°i tho·∫£i m√°i',
        price: 189000,
        originalPrice: 279000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.4,
        reviewCount: 22,
        variants: createVariants(['ƒêen', 'Kem', 'H·ªìng'], ['35', '36', '37', '38', '39'], 11),
      },
    ];

    for (const product of products) {
      await prisma.product.upsert({
        where: { slug: product.slug },
        update: {},
        create: {
          ...product,
          categoryId: giayDepCategory.id,
          variants: {
            create: product.variants,
          },
        },
      });
      totalProducts++;
    }
    console.log(`‚úÖ Created ${products.length} products for Gi√†y D√©p`);
  }

  // ===== PH·ª§ KI·ªÜN =====
  if (phuKienCategory) {
    const products = [
      {
        name: 'T√∫i X√°ch N·ªØ',
        slug: 'tui-xach-nu',
        description: 'T√∫i x√°ch n·ªØ da cao c·∫•p sang tr·ªçng',
        price: 799000,
        originalPrice: 1199000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.9,
        reviewCount: 42,
        variants: createVariants(['ƒêen', 'N√¢u', 'ƒê·ªè ƒë√¥'], ['One Size'], 8),
      },
      {
        name: 'Th·∫Øt L∆∞ng Nam Da',
        slug: 'that-lung-nam-da',
        description: 'Th·∫Øt l∆∞ng nam da th·∫≠t cao c·∫•p',
        price: 349000,
        originalPrice: 499000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.6,
        reviewCount: 28,
        variants: createVariants(['ƒêen', 'N√¢u'], ['One Size'], 14),
      },
      {
        name: 'M≈© L∆∞·ª°i Trai',
        slug: 'mu-luoi-trai',
        description: 'M≈© l∆∞·ª°i trai unisex phong c√°ch th·ªÉ thao',
        price: 149000,
        originalPrice: 229000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.3,
        reviewCount: 18,
        variants: createVariants(['ƒêen', 'Tr·∫Øng', 'Navy'], ['Free Size'], 20),
      },
      {
        name: 'K√≠nh M√°t Nam N·ªØ',
        slug: 'kinh-mat-nam-nu',
        description: 'K√≠nh m√°t unisex ch·ªëng tia UV',
        price: 299000,
        originalPrice: 449000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.7,
        reviewCount: 35,
        variants: createVariants(['ƒêen', 'N√¢u', 'Ghi'], ['One Size'], 13),
      },
      {
        name: 'V√≠ Nam Da',
        slug: 'vi-nam-da',
        description: 'V√≠ nam da th·∫≠t nh·ªè g·ªçn ti·ªán l·ª£i',
        price: 279000,
        originalPrice: 399000,
        images: ['/images/placeholder.svg'],
        featured: false,
        rating: 4.5,
        reviewCount: 25,
        variants: createVariants(['ƒêen', 'N√¢u ƒë·∫≠m'], ['One Size'], 16),
      },
      {
        name: 'Ba L√¥ Laptop',
        slug: 'ba-lo-laptop',
        description: 'Ba l√¥ laptop ch·ªëng n∆∞·ªõc, nhi·ªÅu ngƒÉn',
        price: 499000,
        originalPrice: 699000,
        images: ['/images/placeholder.svg'],
        featured: true,
        rating: 4.8,
        reviewCount: 48,
        variants: createVariants(['ƒêen', 'X√°m', 'Navy'], ['One Size'], 11),
      },
    ];

    for (const product of products) {
      await prisma.product.upsert({
        where: { slug: product.slug },
        update: {},
        create: {
          ...product,
          categoryId: phuKienCategory.id,
          variants: {
            create: product.variants,
          },
        },
      });
      totalProducts++;
    }
    console.log(`‚úÖ Created ${products.length} products for Ph·ª• Ki·ªán`);
  }

  // Calculate total variants
  const allProducts = await prisma.product.findMany({
    include: {
      variants: true,
    },
  });
  
  const totalVariants = allProducts.reduce((sum, p) => sum + (p.variants?.length || 0), 0);
  const totalStock = allProducts.reduce(
    (sum, p) => sum + (p.variants?.reduce((s, v) => s + v.stock, 0) || 0),
    0
  );

  console.log('');
  console.log('üéâ Seeding completed!');
  console.log('');
  console.log('üìä Summary:');
  console.log(`   - ${categories.length} categories`);
  console.log(`   - ${totalProducts} products`);
  console.log(`   - ${totalVariants} product variants`);
  console.log(`   - ${totalStock} total stock items`);
  console.log(`   - 1 admin user`);
  console.log('');
  console.log('üìù Admin credentials:');
  console.log('   Email: admin@fashionstore.com');
  console.log('   Password: admin123');
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding database:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
